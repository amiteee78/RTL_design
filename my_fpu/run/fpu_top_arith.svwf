
#
# Mnemonic Maps
#
mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
#
# Groups
#
if {[catch {group get -using [list fround]}]} {
set createdGroup([list fround]) 1
catch {group new -name fround -overlay 0}
}
if {[catch {group get -using [list fcast]}]} {
set createdGroup([list fcast]) 1
catch {group new -name fcast -overlay 0}
}
if {[catch {group get -using [list faddsub]}]} {
set createdGroup([list faddsub]) 1
catch {group new -name faddsub -overlay 0}
}
if {[catch {group get -using [list fmuldiv]}]} {
set createdGroup([list fmuldiv]) 1
catch {group new -name fmuldiv -overlay 0}
}
if {[info exists createdGroup([list fround])]} {
group using fround
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {fpu_top_tb.top.rounder.fround_en_i}]} ] \
    [subst  {[format {fpu_top_tb.top.rounder.fround_state}]} ] \
    [subst  {[format {fpu_top_tb.top.rounder.fround_exp_i[7:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.rounder.fround_frac_i[22:0]}]} ] \
    [subst  {[format {signed(fpu_top_tb.top.rounder.fround_int_o)}]} ] \
    [subst  {[format {fpu_top_tb.top.rounder.fround_ready_o}]} ]
}

if {[info exists createdGroup([list fcast])]} {
group using fcast
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {fpu_top_tb.top.converter.fcast_state}]} ] \
    [subst  {[format {fpu_top_tb.top.converter.fcast_sign_o}]} ] \
    [subst  {[format {fpu_top_tb.top.converter.fcast_exp_o[7:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.converter.fcast_frac_o[22:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.converter.fcast_grs_bit_o[2:0]}]} ]
}

if {[info exists createdGroup([list faddsub])]} {
group using faddsub
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {fpu_top_tb.top.adder.faddsub_state}]} ] \
    [subst  {[format {fpu_top_tb.top.adder.faddsub_ready_o}]} ] \
    [subst  {[format {fpu_top_tb.top.adder.faddsub_sign_o}]} ] \
    [subst  {[format {fpu_top_tb.top.adder.faddsub_exp_o[7:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.adder.faddsub_frac_o[22:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.adder.faddsub_grs_bit_o[2:0]}]} ]
}

if {[info exists createdGroup([list fmuldiv])]} {
group using fmuldiv
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {fpu_top_tb.top.mult_divdr.fmuldiv_state}]} ] \
    [subst  {[format {fpu_top_tb.top.mult_divdr.fmuldiv_ready_o}]} ] \
    [subst  {[format {fpu_top_tb.top.mult_divdr.fmuldiv_sign_o}]} ] \
    [subst  {[format {fpu_top_tb.top.mult_divdr.fmuldiv_exp_o[7:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.mult_divdr.fmuldiv_frac_o[22:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.mult_divdr.fmuldiv_grs_bit_o[2:0]}]} ] \
    [subst  {[format {fpu_top_tb.top.mult_divdr.fmuldiv_exp_ovf_o}]} ]
}

set id [waveform add -label Control_Unit -comment {}]
waveform format $id -namecolor #ff9900 -bgcolor #ffffff
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_clk}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_rst_n}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_state}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_op_i[6:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_dec_en_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_enc_en_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_dec_ready_i}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_enc_ready_i}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.control_unit.fpu_mod_en_o[6:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -cdivider divider]
set id [waveform add -label Decoder_Unit -comment {}]
waveform format $id -namecolor #ff9900 -bgcolor #ffffff
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_en_i}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_opcode_i[4:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_sign1_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_exp1_o[7:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_sfgnd1_o[23:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_sign2_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_exp2_o[7:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_sfgnd2_o[23:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.dec_state}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.decode_unit.fpu_dec_ready_o}]}
	} ]]
set id [waveform add -cdivider divider]
set id [waveform add -label Encoder_Unit -comment {}]
waveform format $id -namecolor #ff9900 -bgcolor #ffffff
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_enc_en_i}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_round_mode_i[2:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_out_type_i[4:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_enc_ready_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.enc_state}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_result_o[31:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_enc_nanf_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_enc_inf_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_enc_ovf_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_enc_uf_o}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {fpu_top_tb.top.encoder_unit.fpu_enc_zf_o}]}
	} ]]
set id [waveform add -cdivider divider]

set groupId0 [waveform add -groups fround]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {fpu_top_tb.top.rounder.fround_en_i}]} {}
    {[format {fpu_top_tb.top.rounder.fround_state}]} {}
    {[format {fpu_top_tb.top.rounder.fround_exp_i[7:0]}]} {-radix %b}
    {[format {fpu_top_tb.top.rounder.fround_frac_i[22:0]}]} {-radix %b}
    {[format {signed(fpu_top_tb.top.rounder.fround_int_o)}]} {-radix %x}
    {[format {fpu_top_tb.top.rounder.fround_ready_o}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0


set groupId0 [waveform add -groups fcast]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {fpu_top_tb.top.converter.fcast_state}]} {}
    {[format {fpu_top_tb.top.converter.fcast_sign_o}]} {}
    {[format {fpu_top_tb.top.converter.fcast_exp_o[7:0]}]} {}
    {[format {fpu_top_tb.top.converter.fcast_frac_o[22:0]}]} {-radix %b}
    {[format {fpu_top_tb.top.converter.fcast_grs_bit_o[2:0]}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0


set groupId0 [waveform add -groups faddsub]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {fpu_top_tb.top.adder.faddsub_state}]} {}
    {[format {fpu_top_tb.top.adder.faddsub_ready_o}]} {}
    {[format {fpu_top_tb.top.adder.faddsub_sign_o}]} {}
    {[format {fpu_top_tb.top.adder.faddsub_exp_o[7:0]}]} {-radix %b}
    {[format {fpu_top_tb.top.adder.faddsub_frac_o[22:0]}]} {-radix %b}
    {[format {fpu_top_tb.top.adder.faddsub_grs_bit_o[2:0]}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0


set groupId0 [waveform add -groups fmuldiv]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {fpu_top_tb.top.mult_divdr.fmuldiv_state}]} {}
    {[format {fpu_top_tb.top.mult_divdr.fmuldiv_ready_o}]} {}
    {[format {fpu_top_tb.top.mult_divdr.fmuldiv_sign_o}]} {}
    {[format {fpu_top_tb.top.mult_divdr.fmuldiv_exp_o[7:0]}]} {}
    {[format {fpu_top_tb.top.mult_divdr.fmuldiv_frac_o[22:0]}]} {-radix %b}
    {[format {fpu_top_tb.top.mult_divdr.fmuldiv_grs_bit_o[2:0]}]} {}
    {[format {fpu_top_tb.top.mult_divdr.fmuldiv_exp_ovf_o}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0


waveform xview limits 0 1295ns
